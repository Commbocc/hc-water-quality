import{A as r,B as a,E as u,F as y,O as d,T as h,P as l,V as x}from"./XTiWLC6H.js";import{d as G}from"./DiG5jK3v.js";import"./CEOtNdJQ.js";let i=class extends y{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};r([a({type:Boolean,json:{write:!0}})],i.prototype,"maxGeometryCountExceeded",void 0),r([a({type:[G],json:{write:!0}})],i.prototype,"associations",void 0),i=r([u("esri.rest.networks.support.AssociationGeometriesResult")],i);const $=i;async function O(o,s,e){const t=d(o),n={...s.toJSON(),f:"json"},c=h({...t.query,...n});e?e.method="post":e={method:"post"};const p=l(c,e),m=`${t.path}/synthesizeAssociationGeometries`;return x(m,p).then(f=>A(f,s.outSpatialReference))}function A(o,s){const{data:e}=o,t=$.fromJSON(e);if(s)for(const n of t.associations)n.geometry.spatialReference=s.clone();return t}export{O as synthesizeAssociationGeometries};
