import{bm as o,at as g,a5 as m,q as n,a1 as a,A as p,B as l,E as c}from"./DgBxOc6k.js";import{t as d}from"./Dxtv7eRQ.js";import{m as u,u as w}from"./B1VZpmwc.js";import{t as y}from"./By5fHDIW.js";import{$ as V}from"./BPifXZpt.js";import{t as f}from"./rmKzd6cm.js";import"./Cy1Z8e3S.js";import"./CXqKSaGN.js";import"./C14Q9bsB.js";import"./CYMvjYBC.js";import"./BipfWLt3.js";import"./BgAA7Joj.js";import"./BOWbz4lP.js";import"./DHN3oS5t.js";import"./BPTfGz5F.js";import"./BRqP_wXA.js";import"./D_Hhz84A.js";import"./asPOQ_ZQ.js";import"./CQuTPb9g.js";import"./CUzevAry.js";import"./CqrNtETm.js";import"./TgX2bD_5.js";import"./BOD-G50G.js";import"./BmZEZMMh.js";import"./D53i908L.js";import"./D5zmR9t2.js";import"./yYKP6GX_.js";import"./4YZRQ8Kr.js";import"./gDn-Xq4E.js";import"./B6CTbX1X.js";import"./MDUrh2eL.js";import"./BCPhyR7L.js";import"./Blu9Ckm7.js";import"./DmRz6nou.js";import"./nZdmKIgz.js";import"./BDbQRQaC.js";import"./DZSJEpot.js";import"./DHtweXRf.js";import"./Wa8cmqdu.js";import"./ClckGAvl.js";let s=class extends u(w){constructor(){super(...arguments),this._highlightCounter=new f}attach(){this.graphicsView=new V({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new y(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}async hitTest(t){return this.graphicsView?this.graphicsView.hitTest(t).map(i=>({type:"graphic",graphic:i,mapPoint:t,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(t){this.graphicsView.processUpdate(t)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(t,i="highlight"){let r;typeof t=="number"?r=[t]:t instanceof g?r=[t.uid]:Array.isArray(t)&&t.length>0?r=typeof t[0]=="number"?t:t.map(h=>h&&h.uid):m.isCollection(t)&&t.length>0&&(r=t.map(h=>h&&h.uid).toArray());const e=r==null?void 0:r.filter(n);return e!=null&&e.length?(this._addHighlight(e,i),a(()=>this._removeHighlight(e,i))):a()}_addHighlight(t,i){this._highlightCounter.addReason(t,i),this._updateHighlight()}_removeHighlight(t,i){this._highlightCounter.deleteReason(t,i),this._updateHighlight()}_updateHighlight(){var i;const t=[];for(const r of this._highlightCounter.ids()){const e=this._highlightCounter.getHighestReason(r),h=d(e);t.push({objectId:r,highlightFlags:h})}(i=this.graphicsView)==null||i.setHighlight(t)}};p([l()],s.prototype,"graphicsView",void 0),s=p([c("esri.views.2d.layers.GraphicsLayerView2D")],s);const at=s;export{at as default};
