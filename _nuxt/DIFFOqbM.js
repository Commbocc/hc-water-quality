import{A as r,B as o,bH as g,E as m,Z as l,a2 as d,a4 as u,a8 as c}from"./BggqJDft.js";import{a as y}from"./CpGY8KCD.js";import{m as f,u as x}from"./BXo9SgwA.js";import{$ as w}from"./BC_R-WZ3.js";import{h as _}from"./nxCzgK0h.js";import{v}from"./58N6qYqA.js";import{m as H}from"./Bzu27POA.js";import{i as I}from"./BRA4mAE6.js";import{U,r as V}from"./Bq1LPYm9.js";import"./DUHSl2LR.js";import"./CpXW3Q5t.js";import"./C14Q9bsB.js";import"./Df3R4XWy.js";import"./CYMvjYBC.js";import"./BRqP_wXA.js";import"./CO8Oq-SV.js";import"./BelVAuKG.js";import"./BOD-G50G.js";import"./wWRBg9hv.js";import"./CDvRZ9Ud.js";import"./BCHmOBHu.js";import"./B6CTbX1X.js";import"./MDUrh2eL.js";import"./BldL2Olo.js";import"./DewAb69I.js";import"./CQuTPb9g.js";import"./Blu9Ckm7.js";import"./9uhYMgf-.js";import"./eo8OaSOB.js";import"./BbhkZNmz.js";import"./CUzevAry.js";import"./BmZEZMMh.js";import"./Dh8xK1L1.js";import"./D5zmR9t2.js";import"./FBDMF3bD.js";import"./BMeYO-us.js";import"./C46V0t9z.js";import"./Wa8cmqdu.js";import"./DqOPm0bZ.js";import"./YBB7dY3U.js";import"./Djvrv2iN.js";import"./C-McJ6PS.js";import"./DD4Mzkvp.js";import"./nZdmKIgz.js";import"./G8r0TG2F.js";import"./DZ5C6FQv.js";import"./3lz2d4GT.js";import"./DYFmUbb9.js";const P=t=>{let e=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([o()],e.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],e.prototype,"floors",null),r([o({readOnly:!0})],e.prototype,"exportImageVersion",null),r([o()],e.prototype,"layer",void 0),r([o()],e.prototype,"suspended",void 0),r([o(g)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let s=class extends P(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{d(i)||u.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,a=i>=10.3,n=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new U({createFetchPopupFeaturesQueryGeometry:(p,h)=>V(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new v({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:a,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,a){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}fetchImageBitmap(t,e,i,a){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],s.prototype,"strategy",void 0),r([o()],s.prototype,"updating",void 0),s=r([m("esri.views.2d.layers.MapImageLayerView2D")],s);const vt=s;export{vt as default};
