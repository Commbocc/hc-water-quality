function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["./Dq11UiJN.js","./DgBxOc6k.js","./Cy1Z8e3S.js","./entry.BQZMgYnx.css","./C00B3Nzl.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{_ as G}from"./Cy1Z8e3S.js";import{Q as x,Y as Q,bn as J,bo as V,bp as K,h as I,g as M,n as U,S as j,ew as P,R as B,ey as C}from"./DgBxOc6k.js";import{a as T,b as u,r as p,x as L,d as W,G as y,a9 as O,v as Y,N as E,U as _,q as X,E as q,X as k,k as z,t as H,aa as Z,ab as A,ac as $}from"./DhqtO-eM.js";import{l as tt}from"./B-FbUrCf.js";import{a as nt,m as et,t as rt,p as at,c as it}from"./C00B3Nzl.js";import"./DZSJEpot.js";import"./BlMso3qf.js";import"./DBMUNbK5.js";import"./BCPhyR7L.js";import"./CQuTPb9g.js";import"./Blu9Ckm7.js";let c=null;async function ot(t){const n=Q.geometryServiceUrl??"";if(!n){J()||await V();for(const e of t)e.container[e.indexer]=K(e.container[e.indexer],I.WGS84);return}const r=t.map(e=>e.container[e.indexer]),i=new M({geometries:r,outSpatialReference:I.WGS84}),s=await U(n,i);for(let e=0;e<s.length;e++){const a=t[e];a.container[a.indexer]=s[e]}}async function D(t,n){const r=new j({portal:t,id:n});return await r.load(),c===null&&(c=await G(()=>import("./Dq11UiJN.js").then(i=>i.k),__vite__mapDeps([0,1,2,3,4]),import.meta.url)),await c.fetchKnowledgeGraph(r.url)}function v(t,n,r,i,s){if(t===null)return null;if(y(t)||q(t))return t;if(k(t)||k(t))return t.toJSDate();if(z(t))return t.toStorageFormat();if(H(t))return t.toStorageString();if(Z(t)){const e={};for(const a of t.keys())e[a]=v(t.field(a),n,r,i,s),e[a]instanceof P&&s.push({container:e,indexer:a});return e}if(_(t)){const e=t.map(a=>v(a,n,r,i,s));for(let a=0;a<e.length;a++)e[a]instanceof P&&s.push({container:e,indexer:a});return e}if(A(t)){if(t.spatialReference.isWGS84)return t;if(t.spatialReference.isWebMercator&&n)return B(t);if(!n||!r)return t;throw new u(i,p.WrongSpatialReference,null)}}function st(t,n){if(!t)return t;if(t.spatialReference.isWGS84&&n.spatialReference.isWebMercator)return C(t);if(t.spatialReference.equals(n.spatialReference))return t;throw new u(n,p.WrongSpatialReference,null)}function S(t,n){if(!t)return null;const r={};for(const i in t)r[i]=w(t[i],n);return r}function w(t,n){return t===null?null:_(t)?t.map(r=>w(r,n)):t instanceof et?{graphTypeName:t.typeName,id:t.id,graphType:"entity",properties:S(t.properties,n)}:t instanceof rt?{graphType:"object",properties:S(t.properties,n)}:t instanceof at?{graphTypeName:t.typeName,id:t.id,graphType:"relationship",originId:t.originId??null,destinationId:t.destinationId??null,properties:S(t.properties,n)}:t instanceof it?{graphType:"path",path:t.path?t.path.map(r=>w(r,n)):null}:A(t)?st(t,n):y(t)||q(t)||$(t)?t:null}function Rt(t){t.mode==="async"&&(t.functions.knowledgegraphbyportalitem=function(n,r){return t.standardFunctionAsync(n,r,(i,s,e)=>{var m,d;if(T(e,2,2,n,r),e[0]===null)throw new u(n,p.PortalRequired,r);if(e[0]instanceof L){const f=W(e[1]);let h=null;return h=(m=n.services)!=null&&m.portal?n.services.portal:x.getDefault(),D(tt(e[0],h),f)}if(y(e[0])===!1)throw new u(n,p.InvalidParameter,r);const a=W(e[0]);return D(((d=n.services)==null?void 0:d.portal)??x.getDefault(),a)})},t.signatures.push({name:"knowledgegraphbyportalitem",min:2,max:2}),t.functions.querygraph=function(n,r){return t.standardFunctionAsync(n,r,async(i,s,e)=>{var b;T(e,2,4,n,r);const a=e[0];if(!O(a))throw new u(n,p.InvalidParameter,r);const m=e[1];if(!y(m))throw new u(n,p.InvalidParameter,r);c===null&&(c=await G(()=>import("./Dq11UiJN.js").then(o=>o.k),__vite__mapDeps([0,1,2,3,4]),import.meta.url));let d=null;const f=Y(e[2],null);if(!(f instanceof E||f===null))throw new u(n,p.InvalidParameter,r);if(f){let o=[];d=v(f,!0,!1,n,o),o=o.filter(l=>!l.container[l.indexer].spatialReference.isWGS84),o.length>0&&await ot(o)}const h=new nt({openCypherQuery:m,bindParameters:d});(((b=a==null?void 0:a.serviceDefinition)==null?void 0:b.currentVersion)??11.3)>11.2&&(h.outputSpatialReference=n.spatialReference);const F=(await c.executeQueryStreaming(a,h)).resultRowsStream.getReader(),R=[];try{for(;;){const{done:o,value:l}=await F.read();if(o)break;if(_(l))for(const g of l)R.push(w(g,n));else{const g=[];for(const N of l)g.push(w(l[N],n));R.push(g)}}}catch(o){throw o}return E.convertJsonToArcade(R,X(n),!1,!0)})},t.signatures.push({name:"querygraph",min:2,max:4}))}export{Rt as registerFunctions};
